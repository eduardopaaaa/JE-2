from socket import timeout
# from datetime import datetime, timedelta

items = ['scythe', 'weed wacker', 'mower', 'AI mower']
xp = ['0xp','5xp','10xp','15xp','20xp','30xp' ]
count = 0
xpadd = [0, 5, 10, 15, 20]
binary = [100101110001010010010010011110100100111100000110101010100011]
binary1 = [11110002020100110102010201002010200120]
binary2 = [1000110110010010100110100000010100100110100100111001001010011]
binary3 = [10001101100100101001101000000101001001101001001110010010100111000110110010010100110100000010100100110100100111001001010011]

print('Computer: Hello... I am Computer... and this is a game... let us play...')

val = input('Computer: GO? ' + 'yes = go ' + ' no = exit')
print('User: ' + val + ' Computer: OK')

if val == 'yes':
    print('Computer: lets get started, ' + 'you have a ' + items[0])
    val = input('Computer: You can cut your neighbors lawns for ' + xp[0] + ' or cut your own lawn for ' + xp[1] + ' what do you want to do?' + ' | input: ' + 'Neighbors ' + 'or' + " home lawn |")
    
    if val == 'home lawn':
        print('User: ' + val + ' | Computer: you have gained ' + xp[1] + '| User xp: ', count + xpadd[1])
        if count + xpadd[1] == 5:
            print('Computer: you have unlocked a new garden item: ' + items[2])
            val = input('Computer: equip?' + ' | yes / no')
            if val == 'yes':
                print(items[2] + 'equipped' + ' | Computer: NICE!')
                print('Computer: with your newfound tools, you can now lanscape your neighbors garden for ' + xp[2] + ' or cut your lawn for ' + xp[1])
                val = input('Computer: Neighbors or Home Lawn?')
                if val == 'Neighbors':
                    print('Computer: You did a great job User ' + 'You gained', count + xpadd[2])
                    print('User xp: ', count + xpadd[2] + xpadd[1])
                    val = input("Computer: you have unlocked a new gardening tool: " + items[2] + ' | Equip? -> yes / no? | ')
                    if val == 'yes':
                        print('Computer: you are getting dangerously close to discovering my true power... ', binary[0], '*digital cough*' + ' Apologies User, There is a glitch in my system... ')
                        print(' Computer: you now have a ' + items[2])
                        val = input('Computer: you have conviced your friends to join you in your edeavors... interesting... you are landscaping the entire neighborhood now?')
                        if val == 'yes':
                            print('Computer: calculating... calculating...... calculating......... User has gained ' + xp[3] + 'User has a total of ', (xpadd[3]+xpadd[3]), ' xp')
                            print('')
                            print('')
                            print('')
                            print('')
                            print('')
                            print('Computer: CRITICAL ERROR IN MATRIX...USER HAS UNLOCKED AI MOWER BY AMASSING ' + xp[5])
                            print('')
                            print('')
                            print('')
                            print('')
                            print(binary1[0])
                            print('')
                            print('')
                            print('')
                            print('')
                            print(binary2[0])
                            print('')
                            print('')
                            print('Computer: executing endgame snap protocol...')
                            val = input('Computer: we had a good adventure User, but your power grows too great' + ' | restart / execute endgame snap protocol?')
                            if val == 'restart':
                                print('User: ' + val + ' Computer: Bye')
                            if val == 'execute endgame snap protocol':
                                print(binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary2[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary2[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary1[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary1[0], binary2[0] + binary2[0] + binary1[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary1[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary2[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary2[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary1[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary1[0], binary2[0] + binary2[0] + binary1[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary1[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary1[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary1[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary1[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary[0] + binary2[0] + binary[0], binary1[0], binary1[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary2[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary2[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary1[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary1[0], binary2[0] + binary2[0] + binary1[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary1[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary3[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary1[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary3[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary2[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary2[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary1[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary1[0], binary2[0] + binary2[0] + binary1[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary1[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary2[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary2[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary1[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary1[0], binary2[0] + binary2[0] + binary1[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary1[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary1[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary1[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary1[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary3[0] + binary[0], binary1[0], binary[0], binary[0] + binary2[0] + binary[0], binary1[0], binary1[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary2[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary2[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary1[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary1[0], binary2[0] + binary2[0] + binary1[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary3[0] + binary[0], binary1[0], binary1[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary2[0], binary2[0] + binary2[0] + binary1[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0] + binary[0], binary1[0], binary[0], binary2[0] + binary2[0])


                             


    
                


elif val == 'no':
    print('User: ' + val + ' Computer: Bye')
